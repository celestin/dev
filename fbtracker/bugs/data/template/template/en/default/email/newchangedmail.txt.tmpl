use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1292760444',
        'name' => 'email/newchangedmail.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 21 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\nFrom: ";
#line 22 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'mailfrom' ]]);
    $output .=  "\nTo: ";
#line 23 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['to_user', 0, 'email', 0]);
    $output .=  "\nSubject: [#";
#line 24 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('bugid');
    $output .=  "] ";
#line 24 "template\en\default\email\newchangedmail.txt.tmpl"
    if ($stash->get('isnew')) {
    $output .=  'New: ';
    }
    
#line 24 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('summary');
    $output .=  "\nContent-Type: text/html; charset=\"UTF-8\" \nX-Bugzilla-Reason: ";
#line 26 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('reasonsheader');
    $output .=  "\nX-Bugzilla-Type: ";
#line 27 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('isnew') ? 'new' : 'changed';
    $output .=  "\nX-Bugzilla-Watch-Reason: ";
#line 28 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('reasonswatchheader');
#line 31 "template\en\default\email\newchangedmail.txt.tmpl"
    if ($stash->get(['Param', [ 'useclassification' ]])) {
    $output .=  "\nX-Bugzilla-Classification: ";
#line 30 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('classification');
    }
    
    $output .=  "\nX-Bugzilla-Product: ";
#line 32 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('product');
    $output .=  "\nX-Bugzilla-Component: ";
#line 33 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('comp');
    $output .=  "\nX-Bugzilla-Keywords: ";
#line 34 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('keywords');
    $output .=  "\nX-Bugzilla-Severity: ";
#line 35 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('severity');
    $output .=  "\nX-Bugzilla-Who: ";
#line 36 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('changer');
    $output .=  "\nX-Bugzilla-Status: ";
#line 37 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('status');
    $output .=  "\nX-Bugzilla-Priority: ";
#line 38 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('priority');
    $output .=  "\nX-Bugzilla-Assigned-To: ";
#line 39 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('assignedto');
    $output .=  "\nX-Bugzilla-Target-Milestone: ";
#line 40 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('targetmilestone');
    $output .=  "\nX-Bugzilla-Changed-Fields: ";
#line 41 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('changedfields');
    $output .=  "\n";
#line 42 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('threadingmarker');
    $output .=  "\n\n<html>\n<body>\n<pre><a href=\"";
#line 46 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "show_bug.cgi?id=";
#line 46 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('bugid');
    $output .=  "\">Read more #";
#line 46 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('bugid');
    $output .=  "</a> \n";
#line 51 "template\en\default\email\newchangedmail.txt.tmpl"
    if ($stash->get('diffs')) {
    $output .=  "\n\n";
#line 50 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('diffs');
    }
    
#line 58 "template\en\default\email\newchangedmail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('new_comments');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'comment'} = $_tt_value;
    $output .=  "\n";
#line 56 "template\en\default\email\newchangedmail.txt.tmpl"
    if ($stash->get(['comment', 0, 'count', 0])) {
    $output .=  "\n--- Comment <b style=\"color:#3333FF;\">#";
#line 55 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'count', 0]);
    $output .=  "</b> from <b>";
#line 55 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'author', 0, 'identity', 0]);
    $output .=  "</b> ";
#line 55 "template\en\default\email\newchangedmail.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time', [ $stash->get('undef'), $stash->get(['to_user', 0, 'timezone', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['comment', 0, 'creation_ts', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " ---";
    }
    
    $output .=  "\n";
#line 57 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'body_full', [ { 'is_bugmail' => 1, 'wrap' => 1  } ]]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n-- ";
    $output .=  "\nConfigure ";
#line 61 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "mail: <a href=\"";
#line 61 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "userprefs.cgi?tab=email\">";
#line 61 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "userprefs.cgi?tab=email</a> \n\n------- You are receiving this mail because: -------";
#line 79 "template\en\default\email\newchangedmail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('reasons');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'relationship'} = $_tt_value;
#line 78 "template\en\default\email\newchangedmail.txt.tmpl"
    
    # SWITCH
    do {
        my $_tt_result = $stash->get('relationship');
        my $_tt_match;
        SWITCH: {
    $_tt_match = '0';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are the assignee for the ";
#line 67 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '2';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou reported the ";
#line 69 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '1';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are the QA contact for the ";
#line 71 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '3';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are on the CC list for the ";
#line 73 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '4';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are a voter for the ";
#line 75 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '5';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are watching all ";
#line 77 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " changes.";
        last SWITCH;
    }
    
        }
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 93 "template\en\default\email\newchangedmail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('reasons_watch');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'relationship'} = $_tt_value;
#line 92 "template\en\default\email\newchangedmail.txt.tmpl"
    
    # SWITCH
    do {
        my $_tt_result = $stash->get('relationship');
        my $_tt_match;
        SWITCH: {
    $_tt_match = '0';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are watching the assignee of the ";
#line 83 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '2';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are watching the reporter.";
        last SWITCH;
    }
    $_tt_match = '1';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are watching the QA contact of the ";
#line 87 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '3';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are watching someone on the CC list of the ";
#line 89 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    $_tt_match = '4';
    $_tt_match = [ $_tt_match ] unless ref $_tt_match eq 'ARRAY';
    if (grep(/^\Q$_tt_result\E$/, @$_tt_match)) {
    $output .=  "\nYou are watching a voter for the ";
#line 91 "template\en\default\email\newchangedmail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
        last SWITCH;
    }
    
        }
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n</pre>\n</body>\n</html> ";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
